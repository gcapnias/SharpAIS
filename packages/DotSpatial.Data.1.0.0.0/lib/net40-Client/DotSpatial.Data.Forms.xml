<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotSpatial.Data.Forms</name>
    </assembly>
    <members>
        <member name="T:DotSpatial.Data.Forms.ILogManager">
            <summary>
            This component allows customization of how log messages are sent
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.AddLogger(DotSpatial.Data.Forms.ILogger)">
            <summary>
            To begin logging, create an implementation of the ILogHandler interface,
            or use the DefaultLogger class that is already implemented in this project.
            Then, call this function to add that logger to the list of active loggers.
            This function will return an integer key that you can use to keep track
            of your specific logger.
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.RemoveLogger(System.Int32)">
            <summary>
            The key specified here is the key that was returned by the AddLogger method.
            </summary>
            <param name="key">The integer key of the logger to remove.</param>
            <returns>True if the logger was successfully removed, or false if the key could not be found</returns>
            <exception cref="T:System.ArgumentNullException">key is null</exception>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.AddLoggersFromDirectories">
            <summary>
            Adds all the loggers from directories.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.Exception(System.Exception)">
            <summary>
            The Complete exception is passed here.  To get the stack
            trace, be sure to call ex.ToString().
            </summary>
            <param name="ex">The exception that was thrown by DotSpatial.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.PublicMethodEntered(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            This event will allow the registering of an entrance into a public Method of a "tools" related
            action to register its entrance into a function as well as logging the parameter names
            and a type specific indicator of their value.
            </summary>
            <param name="methodName">The string name of the method</param>
            <param name="parameters">The List&lt;string&gt; of Parameter names and string form values</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.PublicMethodLeft(System.String)">
            <summary>
            This event will allow the registering of the exit from each public method
            </summary>
            <param name="methodName">The Method name of the method being left</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.Status(System.String)">
            <summary>
            A status message was sent.  Complex methods that have a few major steps will
            call a status message to show which step the process is in.  Loops will call
            the progress method instead.
            </summary>
            <param name="message">The string message that was posted.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogMessage(System.String,System.Windows.Forms.DialogResult)">
            <summary>
            This is called by each of the LogMessageBox methods automatically, but if the user wants to use
            a custom messagebox and then log the message and result directly this is the technique.
            </summary>
            <param name="text">The string text of the message that needs to be logged.</param>
            <param name="result">The dialog result from the shown messagebox.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogInput(System.String,System.Windows.Forms.DialogResult,System.String)">
            <summary>
            This method echoes information about input boxes to all the loggers.
            </summary>
            <param name="text">The string message that appeared on the InputBox</param>
            <param name="result">The ystem.Windows.Forms.DialogResult describing if the value was cancelled </param>
            <param name="value">The string containing the value entered.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogInputBox(System.String,System.String@)">
            <summary>
            Displays an InputBox form given the specified text string.  The result is returned byref.
            A DialogResult is returned to show whether the user cancelled the form without providing input.
            </summary>
            <param name="text">The string text to use as an input prompt.</param>
            <param name="result">The string result that was typed into the dialog.</param>
            <returns>A DialogResult showing the outcome.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogInputBox(System.String,System.String,System.String@)">
            <summary>
            Displays an InputBox form given the specified text string.  The result is returned byref.
            A DialogResult is returned to show whether the user cancelled the form without providing input.
            </summary>
            <param name="text">The string text to use as an input prompt.</param>
            <param name="caption">The string to use in the title bar of the InputBox.</param>
            <param name="result">The string result that was typed into the dialog.</param>
            <returns>A DialogResult showing the outcome.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogInputBox(System.String,System.String,DotSpatial.Data.ValidationType,System.String@)">
            <summary>
            Displays an InputBox form given the specified text string.  The result is returned byref.
            A DialogResult is returned to show whether the user cancelled the form without providing input.
            </summary>
            <param name="text">The string text to use as an input prompt.</param>
            <param name="caption">The string to use in the title bar of the InputBox.</param>
            <param name="validation">A DotSpatial.Data.ValidationType enumeration specifying acceptable validation to return OK.</param>
            <param name="result">The string result that was typed into the dialog.</param>
            <returns>A DialogResult showing the outcome.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogInputBox(System.String,System.String,DotSpatial.Data.ValidationType,System.Drawing.Icon,System.String@)">
            <summary>
            Displays an InputBox form given the specified text string.  The result is returned byref.
            A DialogResult is returned to show whether the user cancelled the form without providing input.
            </summary>
            <param name="text">The string text to use as an input prompt.</param>
            <param name="caption">The string to use in the title bar of the InputBox.</param>
            <param name="validation">A DotSpatial.Data.ValidationType enumeration specifying acceptable validation to return OK.</param>
            <param name="icon">Specifies an icon to display on this form.</param>
            <param name="result">The string result that was typed into the dialog.</param>
            <returns>A DialogResult showing the outcome.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogInputBox(System.Windows.Forms.Form,System.String,System.String@)">
            <summary>
            Displays an InputBox form given the specified text string.  The result is returned byref.
            A DialogResult is returned to show whether the user cancelled the form without providing input.
            </summary>
            <param name="owner">The window that owns this modal dialog.</param>
            <param name="text">The string text to use as an input prompt.</param>
            <param name="result">The string result that was typed into the dialog.</param>
            <returns>A DialogResult showing the outcome.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogInputBox(System.Windows.Forms.Form,System.String,System.String,System.String@)">
            <summary>
            Displays an InputBox form given the specified text string.  The result is returned byref.
            A DialogResult is returned to show whether the user cancelled the form without providing input.
            </summary>
            <param name="owner">The window that owns this modal dialog.</param>
            <param name="text">The string text to use as an input prompt.</param>
            <param name="caption">The string to use in the title bar of the InputBox.</param>
            <param name="result">The string result that was typed into the dialog.</param>
            <returns>A DialogResult showing the outcome.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogInputBox(System.Windows.Forms.Form,System.String,System.String,DotSpatial.Data.ValidationType,System.String@)">
            <summary>
            Displays an InputBox form given the specified text string.  The result is returned byref.
            A DialogResult is returned to show whether the user cancelled the form without providing input.
            </summary>
            <param name="owner">The window that owns this modal dialog.</param>
            <param name="text">The string text to use as an input prompt.</param>
            <param name="caption">The string to use in the title bar of the InputBox.</param>
            <param name="validation">A DotSpatial.Data.ValidationType enumeration specifying acceptable validation to return OK.</param>
            <param name="result">The string result that was typed into the dialog.</param>
            <returns>A DialogResult showing the outcome.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogInputBox(System.Windows.Forms.Form,System.String,System.String,DotSpatial.Data.ValidationType,System.Drawing.Icon,System.String@)">
            <summary>
            Displays an InputBox form given the specified text string.  The result is returned byref.
            A DialogResult is returned to show whether the user cancelled the form without providing input.
            </summary>
            <param name="owner">The window that owns this modal dialog.</param>
            <param name="text">The string text to use as an input prompt.</param>
            <param name="caption">The string to use in the title bar of the InputBox.</param>
            <param name="validation">A DotSpatial.Data.ValidationType enumeration specifying acceptable validation to return OK.</param>
            <param name="icon">Specifies an icon to display on this form.</param>
            <param name="result">The string result that was typed into the dialog.</param>
            <returns>A DialogResult showing the outcome.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogMessageBox(System.Windows.Forms.IWin32Window,System.String)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="owner">An implementation of the IWin32Window that will own the modal form dialog box.</param>
            <param name="text">The text to display in the MessageBox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogMessageBox(System.Windows.Forms.IWin32Window,System.String,System.String)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="owner">An implementation of the IWin32Window that will own the modal form dialog box.</param>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogMessageBox(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="owner">An implementation of the IWin32Window that will own the modal form dialog box.</param>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <param name="buttons">One of the MessageBoxButtons that describes which button to display in the MessageBox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogMessageBox(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="owner">An implementation of the IWin32Window that will own the modal form dialog box.</param>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <param name="buttons">One of the MessageBoxButtons that describes which button to display in the MessageBox</param>
            <param name="icon">One of the MessageBoxIcons that describes which icon to display in the MessageBox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogMessageBox(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="owner">An implementation of the IWin32Window that will own the modal form dialog box.</param>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <param name="buttons">One of the MessageBoxButtons that describes which button to display in the MessageBox</param>
            <param name="icon">One of the MessageBoxIcons that describes which icon to display in the MessageBox</param>
            <param name="defaultButton">One of the MessageBoxDefaultButtons that describes the default button for the MessageBox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogMessageBox(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="owner">An implementation of the IWin32Window that will own the modal form dialog box.</param>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <param name="buttons">One of the MessageBoxButtons that describes which button to display in the MessageBox</param>
            <param name="icon">One of the MessageBoxIcons that describes which icon to display in the MessageBox</param>
            <param name="defaultButton">One of the MessageBoxDefaultButtons that describes the default button for the MessageBox</param>
            <param name="options">One of the MessageBoxOptions that describes which display and association options to use for the MessageBox.  You may pass 0 if you wish to use the defaults.</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogMessageBox(System.String)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="text">The text to display in the MessageBox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogMessageBox(System.String,System.String)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogMessageBox(System.String,System.String,System.Windows.Forms.MessageBoxButtons)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <param name="buttons">One of the MessageBoxButtons that describes which button to display in the MessageBox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogMessageBox(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <param name="buttons">One of the MessageBoxButtons that describes which button to display in the MessageBox</param>
            <param name="icon">One of the MessageBoxIcons that describes which icon to display in the MessageBox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogMessageBox(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <param name="buttons">One of the MessageBoxButtons that describes which button to display in the MessageBox</param>
            <param name="icon">One of the MessageBoxIcons that describes which icon to display in the MessageBox</param>
            <param name="defaultButton">One of the MessageBoxDefaultButtons that describes the default button for the MessageBox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogMessageBox(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <param name="buttons">One of the MessageBoxButtons that describes which button to display in the MessageBox</param>
            <param name="icon">One of the MessageBoxIcons that describes which icon to display in the MessageBox</param>
            <param name="defaultButton">One of the MessageBoxDefaultButtons that describes the default button for the MessageBox</param>
            <param name="options">One of the MessageBoxOptions that describes which display and association options to use for the MessageBox.  You may pass 0 if you wish to use the defaults.</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogManager.LogMessageBox(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.Boolean)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <param name="buttons">One of the MessageBoxButtons that describes which button to display in the MessageBox</param>
            <param name="icon">One of the MessageBoxIcons that describes which icon to display in the MessageBox</param>
            <param name="defaultButton">One of the MessageBoxDefaultButtons that describes the default button for the MessageBox</param>
            <param name="options">One of the MessageBoxOptions that describes which display and association options to use for the MessageBox.  You may pass 0 if you wish to use the defaults.</param>
            <param name="displayHelpButton">A boolean indicating whether or not to display a help button on the messagebox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="T:DotSpatial.Data.Forms.FileItem">
            <summary>
            FileItem
            </summary>
        </member>
        <member name="T:DotSpatial.Data.Forms.DirectoryItem">
            <summary>
            DirectoryItems can be either Files or Folders
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.DirectoryItem.#ctor">
            <summary>
            Creates a new instance of DirectoryItem
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.DirectoryItem.#ctor(System.String)">
            <summary>
            Creates a new instance of a directory item based on the specified path.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:DotSpatial.Data.Forms.DirectoryItem.Draw(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This method instructs this item to draw itself onto the specified graphics surface.
            </summary>
            <param name="e">A PaintEventArgs that contains the Graphics object needed for drawing.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.DirectoryItem.OnDraw(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This supplies the basic drawing for this one element where the graphics object has been transformed
            based on the position of this item.
            </summary>
            <param name="e">A PaintEventArgs that contains the Graphics object needed for drawing.</param>
        </member>
        <member name="P:DotSpatial.Data.Forms.DirectoryItem.BackColor">
            <summary>
            Gets or sets the background color for this item.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DirectoryItem.Bounds">
            <summary>
            Gets or sets the rectangle in
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DirectoryItem.ClientRectangle">
            <summary>
            Gets a rectangle in control coordinates showing the size of this control
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DirectoryItem.CustomImage">
            <summary>
            Gets or sets the custom icon that is used if the ItemType is set to custom
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DirectoryItem.Font">
            <summary>
            Gets or sets the font for this directory item
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DirectoryItem.FontColor">
            <summary>
            Gets or sets the color that should be used for drawing the fonts.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DirectoryItem.Image">
            <summary>
            Gets the icon that should be used
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DirectoryItem.IsHighlighted">
            <summary>
            Gets or sets whether this specific item should be drawn highlighted
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DirectoryItem.IsOutlined">
            <summary>
            Gets or sets a boolean that controls whether or not a black dotted rectangle
            will surround this item.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DirectoryItem.IsSelected">
            <summary>
            Gets or sets whether this specific item should be drawn highlighted
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DirectoryItem.ItemType">
            <summary>
            Gets or set the ItemType for this particular directory item.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DirectoryItem.Path">
            <summary>
            Gets or sets the complete path for this directory item.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DirectoryItem.ShowImage">
            <summary>
            Gets or sets a boolean governing whether or not an icon should be drawn.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DirectoryItem.Text">
            <summary>
            Gets or sets the string text for this directory item.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DirectoryItem.Top">
            <summary>
            Gets or set the integer top of this item
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DirectoryItem.Width">
            <summary>
            Gets or sets the width of this control
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DirectoryItem.Height">
            <summary>
            Gets or sets the height of this control
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.FileItem.#ctor">
            <summary>
            Creates a new instance of FileItem
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.FileItem.#ctor(System.String)">
            <summary>
            Creates a new insteance of a FileItem associated with the specified path.
            </summary>
            <param name="path">Gets or sets a string path</param>
        </member>
        <member name="P:DotSpatial.Data.Forms.FileItem.Info">
            <summary>
            Gets or sets the FileInfo
            </summary>
        </member>
        <member name="T:DotSpatial.Data.Forms.DirectoryView">
            <summary>
            DirectoryView
            </summary>
        </member>
        <member name="T:DotSpatial.Data.Forms.ScrollingControl">
            <summary>
            ScrollingControl that provides autoscroll and custom draw that won't crash mono
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.ScrollingControl.#ctor">
            <summary>
            Creates a new instance of ScrollingControl
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.ScrollingControl.OnVerticalScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Occurs when scrolling vertically
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Data.Forms.ScrollingControl.OnHorizontalScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Occurs when scrolling horizontally
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Data.Forms.ScrollingControl.ClientToDocument(System.Drawing.Rectangle)">
            <summary>
            Gets a rectangle in document coordinates for hte specified rectangle in client coordinates
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ScrollingControl.DocumentToClient(System.Drawing.Rectangle)">
            <summary>
            Translates a rectangle from document coordinates to coordinates relative to the client control
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.ScrollingControl.ResetScroll">
            <summary>
            Recalculates the size and visibility of the scroll bars based on the current document.
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.ScrollingControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Prevent flicker by preventing this
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:DotSpatial.Data.Forms.ScrollingControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            On Paint only paints the specified clip rectangle, but paints
            it from the page buffer.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Data.Forms.ScrollingControl.OnDrawBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Occurs during custom drawing when erasing things
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Data.Forms.ScrollingControl.OnDraw(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Occurs during custom drawing
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Data.Forms.ScrollingControl.Dispose(System.Boolean)">
            <summary>
            Disposes the unmanaged memory objects and optionally disposes
            the managed memory objects
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:DotSpatial.Data.Forms.ScrollingControl.OnInitialize(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Fires the Initialized event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Data.Forms.ScrollingControl.OnResize(System.EventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="E:DotSpatial.Data.Forms.ScrollingControl.Initialized">
            <summary>
            Occurs after the base drawing content has been rendered to the page.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.ScrollingControl.BackColor">
            <summary>
            Gets or sets the background color to use for this control
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.ScrollingControl.BackgroundImage">
             <summary>
            
             </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.ScrollingControl.ControlRectangle">
            <summary>
            Gets the rectangular region of the control in page coordinates.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.ScrollingControl.DocumentRectangle">
            <summary>
            Gets or sets the rectangle for the entire content, whether on the page buffer or not.  X and Y for this
            are always 0.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.ScrollingControl.IsInitialized">
            <summary>
            Gets or sets whether or not the page for this control has been drawn.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.ScrollingControl.HorizontalScrollEnabled">
            <summary>
            Gets or sets a boolean indicating whether or not horizontal scrolling is enabled
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.ScrollingControl.Page">
            <summary>
            Gets or sets the page image being used as a buffer.  This is useful
            for content changes that need to be made rapidly.  First refresh
            a small region of this page, and then invalidate the client rectangle.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.ScrollingControl.ResetOnResize">
            <summary>
            Gets or sets a boolean that indicates whether or not the scrolling
            should be reset on every resize or not.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.ScrollingControl.VerticalScrollEnabled">
            <summary>
            Gets or sets a boolean indicating whether the vertical scroll should be permitted
            </summary>
        </member>
        <member name="F:DotSpatial.Data.Forms.DirectoryView._directory">
            <summary>
            Designer variable
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.DirectoryView.#ctor">
            <summary>
            Creates a new instance of DirectoryView
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.DirectoryView.OnInitialize(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Data.Forms.DirectoryView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the situation where the mouse has been pressed down.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Data.Forms.DirectoryView.RefreshItem(DotSpatial.Data.Forms.DirectoryItem)">
            <summary>
            Updates the buffer in order to correctly re-draw this item, if it is on the page, and then invalidates
            the area where this will be drawn.
            </summary>
            <param name="item">The directory item to invalidate</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.DirectoryView.Clear">
            <summary>
            Removes the existing Directory Items from the control
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.DirectoryView.UpdateContent">
            <summary>
            Causes the control to refresh the current content.
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.DirectoryView.ClearSelection">
            <summary>
            Systematically clears any currently selected items.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DirectoryView.SelectedItem">
            <summary>
            Gets or sets the selected item.  In cases of a multiple select, this is the
            last member added to the selection.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DirectoryView.Directory">
            <summary>
            Gets or sets the string path that should be itemized in the view.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DirectoryView.Items">
            <summary>
            Gets or sets the collection of DirectoryItems to draw in this control
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DirectoryView.Font">
            <summary>
            Gets or sets the Font to be used for all of the items in this view.
            </summary>
        </member>
        <member name="T:DotSpatial.Data.Forms.HighlightEventArgs">
            <summary>
            HighlightEventArgs
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.HighlightEventArgs.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of HighlightEventArgs
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.HighlightEventArgs.IsHighlighted">
            <summary>
            Gets or sets whether or not the control is now highlighted
            </summary>
        </member>
        <member name="T:DotSpatial.Data.Forms.FolderItem">
            <summary>
            FolderItem
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.FolderItem.#ctor">
            <summary>
            Creates a new instance of FolderItem
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.FolderItem.#ctor(System.String)">
            <summary>
            Creates a new instance of FolderItem, but already pointing to the specified path
            </summary>
            <param name="path">The string path that this FolderItem should be identified with</param>
        </member>
        <member name="P:DotSpatial.Data.Forms.FolderItem.Info">
            <summary>
            Gets or sets the directory info
            </summary>
        </member>
        <member name="T:DotSpatial.Data.Forms.NavigateEventArgs">
            <summary>
            NavigateEventArgs
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.NavigateEventArgs.#ctor(System.String)">
            <summary>
            Creates a new instance of NavigateEventArgs
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.NavigateEventArgs.Path">
            <summary>
            Gets the string path that is being navigated to
            </summary>
        </member>
        <member name="T:DotSpatial.Data.Forms.DataManagerExt">
            <summary>
            Extend the data manager with some convenient dialog spawning options.
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.DataManagerExt.OpenVector(DotSpatial.Data.IDataManager)">
            <summary>
            This opens a file, but populates the dialog filter with only raster formats.
            </summary>
            <returns>An IFeatureSet with the data from the file specified in a dialog</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.DataManagerExt.OpenVectors(DotSpatial.Data.IDataManager)">
            <summary>
            This uses an open dialog filter with only raster extensions but where multi-select is
            enabled, hence allowing multiple rasters to be returned in this list.
            </summary>
            <returns>The list or rasters</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.DataManagerExt.OpenImage(DotSpatial.Data.IDataManager)">
            <summary>
            This opens a file, but populates the dialog filter with only raster formats.
            </summary>
            <returns>for now an IDataSet</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.DataManagerExt.OpenImages(DotSpatial.Data.IDataManager)">
            <summary>
            This uses an open dialog filter with only image extensions for supported image formats,
            but where multi-select is enabled, and so allowing multiple images to be returned at once.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.DataManagerExt.OpenFile(DotSpatial.Data.IDataManager)">
            <summary>
            This launches an open file dialog and attempts to load the specified file.
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.DataManagerExt.OpenFiles(DotSpatial.Data.IDataManager)">
            <summary>
            This launches an open file dialog that allows loading of several files at once
            and returns the datasets in a list.
            </summary>
            <returns>A list of all the files that were opened</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.DataManagerExt.OpenRaster(DotSpatial.Data.IDataManager)">
            <summary>
            This opens a file, but populates the dialog filter with only raster formats.
            </summary>
            <returns>An IRaster with the data from the file specified in an open file dialog</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.DataManagerExt.OpenRasters(DotSpatial.Data.IDataManager)">
            <summary>
            This uses an open dialog filter with only raster extensions but where multi-select is
            enabled, hence allowing multiple rasters to be returned in this list.
            </summary>
            <returns>The list or rasters</returns>
        </member>
        <member name="T:DotSpatial.Data.Forms.DataFormsMessageStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DataFormsMessageStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DataFormsMessageStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DataFormsMessageStrings.CurrentElementNotSpecified">
            <summary>
              Looks up a localized string similar to The current element was not defined.  Before attempting to read the element, first assign the value of the current XML Element to read..
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DataFormsMessageStrings.ExtentDialog_Fail_Invalid_Value">
            <summary>
              Looks up a localized string similar to Invalid Value..
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DataFormsMessageStrings.ExtentDialog_Fail_Post">
            <summary>
              Looks up a localized string similar to box.  Either fix the value to represent a double precision floating point value or choose cancel..
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DataFormsMessageStrings.ExtentDialog_Fail_Pre">
            <summary>
              Looks up a localized string similar to There is an invalid entry in the.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DataFormsMessageStrings.ParseFailed_S">
            <summary>
              Looks up a localized string similar to The value you entered could not be parsed into a %S.  Make sure the value is in the valid range..
            </summary>
        </member>
        <member name="T:DotSpatial.Data.Forms.RasterExt">
            <summary>
            Extension method for raster
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.RasterExt.Open(DotSpatial.Data.Raster)">
            <summary>
            Displays a dialog, allowing the users to open a raster.
            </summary>
        </member>
        <member name="T:DotSpatial.Modeling.Forms.ExtentDialog">
            <summary>
            A Dialog that allows users to enter an X, Y, Z or M extent.
            </summary>
        </member>
        <member name="M:DotSpatial.Modeling.Forms.ExtentDialog.#ctor">
            <summary>
            Initializes a new instance of the ExtentDialog class.
            </summary>
        </member>
        <member name="M:DotSpatial.Modeling.Forms.ExtentDialog.Clear">
            <summary>
            Resets all the values to 0.
            </summary>
        </member>
        <member name="M:DotSpatial.Modeling.Forms.ExtentDialog.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Prevents closing as "OK" if there are invalid double values.
            </summary>
            <param name="e">CancelEventArgs that allow canceling close.</param>
        </member>
        <member name="F:DotSpatial.Modeling.Forms.ExtentDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DotSpatial.Modeling.Forms.ExtentDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DotSpatial.Modeling.Forms.ExtentDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:DotSpatial.Modeling.Forms.ExtentDialog.Extent">
            <summary>
            Gets or sets the extent specified by this form.
            </summary>
        </member>
        <member name="T:DotSpatial.Data.Forms.TryXmlDocumentException">
            <summary>
            TryXmlDocumentException
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.TryXmlDocumentException.#ctor(System.String)">
            <summary>
            Creates a new instance of TryXmlDocumentException
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.TryXmlDocumentException.Log">
            <summary>
            Logs this exception
            </summary>
        </member>
        <member name="T:DotSpatial.Data.Forms.ShapefileExt">
            <summary>
            Extension method for shapefile
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.ShapefileExt.OpenFile(DotSpatial.Data.Shapefile)">
            <summary>
            This will use this object to open a shapefile, but launches an open file dialog for the user
            to select the file to open.
            </summary>
            <returns>A new Shapefile created from the file chosen by the open file dialog.</returns>
        </member>
        <member name="T:DotSpatial.Data.Forms.SelectEventArgs">
            <summary>
            SelectEventArgs
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.SelectEventArgs.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of SelectEventArgs
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.SelectEventArgs.IsSelected">
            <summary>
            Gets whether or not the new state of the item is selected
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.SelectEventArgs.Modifiers">
            <summary>
            Gets the modifiers that existed when this event is fired.
            use like if (Modifiers and Keys.Shift){}
            </summary>
        </member>
        <member name="T:DotSpatial.Data.Forms.OpenFileElement">
            <summary>
            The OpenFileElement can be added directly to a form and supports all of the
            basic dialog options that are important for browsing vector/raster/image
            data.
            </summary>
        </member>
        <member name="T:DotSpatial.Data.Forms.OpenDataDialog">
            <summary>
            frmOpenDataDialog
            </summary>
        </member>
        <member name="F:DotSpatial.Data.Forms.OpenDataDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.OpenDataDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.OpenDataDialog.#ctor">
            <summary>
            Creates a new instance of frmOpenDataDialog
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.OpenDataDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:DotSpatial.Data.Forms.TryXmlDocument">
            <summary>
            TryXmlDocument
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.TryXmlDocument.#ctor">
            <summary>
            Creates a new instance of TryXmlDocument
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.TryXmlDocument.NavigateToChild(System.String)">
            <summary>
            This changes CurrentNode to the child node with the specified name.
            If there are no child nodes, or the child node is not found, this returns false.
            If the navigation is successful, this returns true.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.TryXmlDocument.NavigateToParent">
            <summary>
            Attempts to navigate to the parent.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.TryXmlDocument.Open(System.String)">
            <summary>
            Opens the specified
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.TryXmlDocument.ReadText(System.String)">
            <summary>
            Attempts to read the string for the specified value.  This will first test to see if the
            attribute exists and encloses the test in a try block.  If it fails or the node does not
            exist, the default value is returned.
            </summary>
            <param name="attribute">The string name for the attribute to read from the CurrentElement.</param>
            <returns>A string specifying the value</returns>
            <exception cref="T:DotSpatial.Data.Forms.TryXmlDocumentException">CurrentElement Not Specified</exception>
        </member>
        <member name="M:DotSpatial.Data.Forms.TryXmlDocument.ReadColor(System.String)">
            <summary>
            Attempts to read the color from a text representation of an argb integer value.
            </summary>
            <param name="attribute">The name of the attribute to read from the CurrentElement</param>
            <returns>A Color structure</returns>
            <exception cref="T:DotSpatial.Data.Forms.TryXmlDocumentException">CurrentElement Not Specified</exception>
        </member>
        <member name="M:DotSpatial.Data.Forms.TryXmlDocument.ReadBool(System.String)">
            <summary>
            Attempts to read the boolean value from the specified attribute, translating it from
            a text equivalent.
            </summary>
            <param name="attribute">The string name of the attribute to read from the CurrentElement</param>
            <returns>A boolean value based on parsing the text.</returns>
            <exception cref="T:DotSpatial.Data.Forms.TryXmlDocumentException">CurrentElement Not Specified</exception>
        </member>
        <member name="M:DotSpatial.Data.Forms.TryXmlDocument.ReadInteger(System.String)">
            <summary>
            Attempts to read the integer value from the specified attribute, translating it from
            a text equivalent via parsing.
            </summary>
            <param name="attribute">The string name of the attribute to read from the CurrentElement</param>
            <returns>An integer parsed from the inner text of the specified attribute on the CurrentElement</returns>
            <exception cref="T:DotSpatial.Data.Forms.TryXmlDocumentException">CurrentElement Not Specified</exception>
        </member>
        <member name="M:DotSpatial.Data.Forms.TryXmlDocument.ReadDouble(System.String)">
            <summary>
            Attempts to read the double value from the specified attribute, translating it from
            a text equivalent via parsing.
            </summary>
            <param name="attribute">The string name of the attribute to read from the CurrentElement</param>
            <returns>A double value parsed from the inner text of the specified attribute on the CurrentElement</returns>
            <exception cref="T:DotSpatial.Data.Forms.TryXmlDocumentException">CurrentElement Not Specified</exception>
        </member>
        <member name="P:DotSpatial.Data.Forms.TryXmlDocument.Filename">
            <summary>
            Gets or sets the fileName for this document.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.TryXmlDocument.Document">
            <summary>
            Gets or sets the XmlDocument that this class uses for data access.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.TryXmlDocument.CurrentElement">
            <summary>
            Gets or sets the current node that should be referenced for reading attributes.
            </summary>
        </member>
        <member name="T:DotSpatial.Data.Forms.DialogImages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DialogImages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.DialogImages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:DotSpatial.Data.Forms.TimedProgressMeter">
            <summary>
            This handles the methodology of progress messaging in one place to make it easier to update.
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.TimedProgressMeter.#ctor(DotSpatial.Data.IProgressHandler,System.String,System.TimeSpan)">
            <summary>
            Constructs a Time-Based progress meter that shows progress against an expected time.
            </summary>
            <param name="progressHandler"></param>
            <param name="baseMessage"></param>
            <param name="estimatedTime"></param>
        </member>
        <member name="M:DotSpatial.Data.Forms.TimedProgressMeter.#ctor">
            <summary>
            Intializes a new progress meter, but doesn't support the IProgressHandler unless one is specified.
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.TimedProgressMeter.#ctor(DotSpatial.Data.IProgressHandler)">
            <summary>
            A progress meter can't actually do anything without a progressHandler, which actually displays the status.
            </summary>
            <param name="progressHandler">An IProgressHandler that will actually handle the status messages sent by this meter.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.TimedProgressMeter.#ctor(DotSpatial.Data.IProgressHandler,System.String)">
            <summary>
            A progress meter that simply keeps track of progress and is capable of sending progress messages.
            This assumes a MaxValue of 100 unless it is changed later.
            </summary>
            <param name="progressHandler">Any valid IProgressHandler that will display progress messages</param>
            <param name="baseMessage">A base message to use as the basic status for this progress handler.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.TimedProgressMeter.#ctor(DotSpatial.Data.IProgressHandler,System.String,System.Object)">
            <summary>
            A progress meter that simply keeps track of progress and is capable of sending progress messages.
            </summary>
            <param name="progressHandler">Any valid implementation if IProgressHandler that will handle the progress function</param>
            <param name="baseMessage">The message without any progress information.</param>
            <param name="endValue">Percent shoudl show a range between the MinValue and MaxValue.  MinValue is assumed to be 0.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.TimedProgressMeter.Reset">
            <summary>
            Resets the progress meter to the 0 value.  This sets the status message to "Ready.".
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.TimedProgressMeter.SendProgress">
            <summary>
            Sends a progress message to the IProgressHandler interface with the current message and progres
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.TimedProgressMeter.Key">
            <summary>
            Gets or sets the string that does not include any mention of progress percentage, but specifies what is occuring.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.TimedProgressMeter.CurrentPercent">
            <summary>
            Gets or sets the current integer progress level from 0 to 100.  If a new update is less than or equal to the previous
            value, then no progress will be displayed by the ProgressMeter.  Values less than 0 are set to 0.  Values greater than
            100 are set to 100.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.TimedProgressMeter.CurrentValue">
            <summary>
            Gets or sets the current value relative to the specified MaxValue in order to update the progress.
            Setting this will also update OldProgress if there is an integer change in the percentage, and send
            a progress message to the IProgressHandler interface.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.TimedProgressMeter.EndValue">
            <summary>
            The value that defines when the meter should show as 100% complete.
            EndValue can be less than StartValue, but values closer to EndValue
            will show as being closer to 100%.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.TimedProgressMeter.Silent">
            <summary>
            Gets or sets whether the progress meter should send messages to the IProgressHandler.
            By default Silent is false, but setting this to true will disable the messaging portion.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.TimedProgressMeter.StartValue">
            <summary>
            The minimum value defines when the meter should show as 0% complete.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.TimedProgressMeter.StepPercent">
            <summary>
            An integer value that is 1 by default.  Ordinarilly this will send a progress message only when the integer progress
            has changed by 1 percentage point.  For example, if StepPercent were set to 5, then a progress update would only
            be sent out at 5%, 10% and so on.  This helps reduce overhead in cases where showing status messages is actually
            the majority of the processing time for the function.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.TimedProgressMeter.PreviousPercent">
            <summary>
            Gets or sets the previous integer progress level from 0 to 100.  If a new update is less than or equal to the previous
            value, then no progress will be displayed by the ProgressMeter.  Values less than 0 are set to 0.  Values greater than
            100 are set to 100.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.TimedProgressMeter.ProgressHandler">
            <summary>
            Gets or sets the progress handler for this meter
            </summary>
        </member>
        <member name="T:DotSpatial.Data.Forms.ILogger">
            <summary>
            Implementing this interface will allow the plugin developer to
            intercept the different log levels.
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogger.Exception(System.Exception)">
            <summary>
            The Complete exception is passed here.  To get the stack
            trace, be sure to call ex.ToString().
            </summary>
            <param name="ex">The exception that was thrown by DotSpatial.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogger.PublicMethodEntered(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            This event will allow the registering of an entrance into a public Method of a "tools" related
            action to register its entrance into a function as well as logging the parameter names
            and a type specific indicator of their value.
            </summary>
            <param name="methodName">The string name of the method</param>
            <param name="parameters">The list of calling parameters</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogger.PublicMethodLeft(System.String)">
            <summary>
            This event will allow the registering of the exit from each public method
            </summary>
            <param name="methodName">The Method name of the method being left</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogger.Status(System.String)">
            <summary>
            A status message was sent.  Complex methods that have a few major steps will
            call a status message to show which step the process is in.  Loops will call
            the progress method instead.
            </summary>
            <param name="message">The string message that was posted.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogger.MessageBoxShown(System.String,System.Windows.Forms.DialogResult)">
            <summary>
            This method allows a user to recieve messages that were shown to the user, as well as
            their choice on those message boxes.
            </summary>
            <param name="messageText">A MessageBox after it has resolved.</param>
            <param name="result">A DialogResult from showing a message</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.ILogger.InputBoxShown(System.String,System.Windows.Forms.DialogResult,System.String)">
            <summary>
            This method allows the logger to recieve information about input boxes that were shown
            as well as the values enterred into them and the result.
            </summary>
            <param name="messageText">The string message that appeared on the InputBox</param>
            <param name="result">The ystem.Windows.Forms.DialogResult describing if the value was cancelled </param>
            <param name="value">The string containing the value entered.</param>
        </member>
        <member name="P:DotSpatial.Data.Forms.ILogger.Description">
            <summary>
            Gets a string description for this logger.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.ILogger.Key">
            <summary>
            Gets or Sets an integer key to keep track of this logger.
            When you add this logger to a LogManager, it will attempt to keep track of the
            logger by using the key it was given.  If that key is already in use, this
            will be set to the next available integer.
            </summary>
        </member>
        <member name="T:DotSpatial.Data.Forms.FeatureSetExt">
            <summary>
            extension method for feature set
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.FeatureSetExt.Open(DotSpatial.Data.FeatureSet)">
            <summary>
            Displays a dialog, allowing the users to open a raster.
            </summary>
        </member>
        <member name="T:DotSpatial.Data.Forms.ItemType">
            <summary>
            ItemTypes
            </summary>
        </member>
        <member name="F:DotSpatial.Data.Forms.ItemType.Folder">
            <summary>
            The specified element is a folder
            </summary>
        </member>
        <member name="F:DotSpatial.Data.Forms.ItemType.Image">
            <summary>
            The specified element is an image
            </summary>
        </member>
        <member name="F:DotSpatial.Data.Forms.ItemType.Line">
            <summary>
            The specified element is a vector line file format
            </summary>
        </member>
        <member name="F:DotSpatial.Data.Forms.ItemType.Point">
            <summary>
            The specified element is a vector line point format
            </summary>
        </member>
        <member name="F:DotSpatial.Data.Forms.ItemType.Polygon">
            <summary>
            The specified element is a vector polygon format
            </summary>
        </member>
        <member name="F:DotSpatial.Data.Forms.ItemType.Raster">
            <summary>
            The specified element is a raster format
            </summary>
        </member>
        <member name="F:DotSpatial.Data.Forms.ItemType.Custom">
            <summary>
            The specified element is a custom format, so the custom icon is used
            </summary>
        </member>
        <member name="T:DotSpatial.Data.Forms.InputBox">
            <summary>
            frmInputBox
            </summary>
        </member>
        <member name="F:DotSpatial.Data.Forms.InputBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.InputBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.InputBox.#ctor">
            <summary>
            Creates a new instance of frmInputBox
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.InputBox.#ctor(System.String)">
            <summary>
            Creates a new instance of frmInputBox
            </summary>
            <param name="text">Sets the text of the message to show.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.InputBox.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of frmInputBox
            </summary>
            <param name="text">The string message to show.</param>
            <param name="caption">The string caption to allow.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.InputBox.#ctor(System.String,System.String,DotSpatial.Data.ValidationType)">
            <summary>
            Creates a new instance of frmInputBox
            </summary>
            <param name="text">The string message to show.</param>
            <param name="caption">The string caption to allow.</param>
            <param name="validation">A DotSpatial.Data.ValidationType enumeration specifying acceptable validation to return OK.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.InputBox.#ctor(System.String,System.String,DotSpatial.Data.ValidationType,System.Drawing.Icon)">
            <summary>
            Creates a new instance of frmInputBox
            </summary>
            <param name="text">The string message to show.</param>
            <param name="caption">The string caption to allow.</param>
            <param name="validation">A DotSpatial.Data.ValidationType enumeration specifying acceptable validation to return OK.</param>
            <param name="icon">Specifies an icon to appear on this messagebox.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.InputBox.#ctor(System.Windows.Forms.Form,System.String)">
            <summary>
            Creates a new instance of frmInputBox
            </summary>
            <param name="owner">Specifies the Form to set as the owner of this dialog.</param>
            <param name="text">Sets the text of the message to show.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.InputBox.#ctor(System.Windows.Forms.Form,System.String,System.String)">
            <summary>
            Creates a new instance of frmInputBox
            </summary>
            <param name="owner">Specifies the Form  to set as the owner of this dialog.</param>
            <param name="text">The string message to show.</param>
            <param name="caption">The string caption to allow.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.InputBox.#ctor(System.Windows.Forms.Form,System.String,System.String,DotSpatial.Data.ValidationType)">
            <summary>
            Creates a new instance of frmInputBox
            </summary>
            <param name="owner">Specifies the Form to set as the owner of this dialog.</param>
            <param name="text">The string message to show.</param>
            <param name="caption">The string caption to allow.</param>
            <param name="validation">A DotSpatial.Data.ValidationType enumeration specifying acceptable validation to return OK.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.InputBox.#ctor(System.Windows.Forms.Form,System.String,System.String,DotSpatial.Data.ValidationType,System.Drawing.Icon)">
            <summary>
            Creates a new instance of frmInputBox
            </summary>
            <param name="owner">Specifies the Form to set as the owner of this dialog.</param>
            <param name="text">The string message to show.</param>
            <param name="caption">The string caption to allow.</param>
            <param name="validation">A DotSpatial.Data.ValidationType enumeration specifying acceptable validation to return OK.</param>
            <param name="icon">Specifies an icon to appear on this messagebox.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.InputBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:DotSpatial.Data.Forms.InputBox.Result">
            <summary>
            The string result that was entered for this text box.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.InputBox.Validation">
            <summary>
            Gets or sets the type of validation to force on the value before the OK option is permitted.
            </summary>
        </member>
        <member name="T:DotSpatial.Data.Forms.LogManager">
            <summary>
            This component allows customization of how log messages are sent
            </summary>
        </member>
        <member name="F:DotSpatial.Data.Forms.LogManager._components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:DotSpatial.Data.Forms.LogManager.DefaultLogManager">
            <summary>
            This ensures that there will always be some kind of log manager.
            When a new LogManager is created, this static is set to be that instance.
            Controlling the DefaultLogManager will control which log manager
            is actively in use.
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.#ctor">
            <summary>
            Creates a new instance of the LogManager.
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.AddLogger(DotSpatial.Data.Forms.ILogger)">
            <summary>
            To begin logging, create an implementation of the ILogHandler interface,
            or use the DefaultLogger class that is already implemented in this project.
            Then, call this function to add that logger to the list of active loggers.
            This function will return an integer key that you can use to keep track
            of your specific logger.
            </summary>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.RemoveLogger(System.Int32)">
            <summary>
            The key specified here is the key that was returned by the AddLogger method.
            </summary>
            <param name="key">The integer key of the logger to remove.</param>
            <returns>True if the logger was successfully removed, or false if the key could not be found</returns>
            <exception cref="T:System.ArgumentNullException">key is null</exception>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.AddLoggersFromDirectories">
            <summary>
            Adds all the loggers from directories.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.Exception(System.Exception)">
            <summary>
            The Complete exception is passed here.  To get the stack
            trace, be sure to call ex.ToString().
            </summary>
            <param name="ex">The exception that was thrown by DotSpatial.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.PublicMethodEntered(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            This event will allow the registering of an entrance into a public Method of a "tools" related
            action to register its entrance into a function as well as logging the parameter names
            and a type specific indicator of their value.
            </summary>
            <param name="methodName">The string name of the method</param>
            <param name="parameters">The List&lt;string&gt; of Parameter names and string form values</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.PublicMethodLeft(System.String)">
            <summary>
            This event will allow the registering of the exit from each public method
            </summary>
            <param name="methodName">The Method name of the method being left</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.Status(System.String)">
            <summary>
            A status message was sent.  Complex methods that have a few major steps will
            call a status message to show which step the process is in.  Loops will call
            the progress method instead.
            </summary>
            <param name="message">The string message that was posted.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.Progress(System.String,System.Int32,System.String)">
            <summary>
            A progress message, generally as part of a long loop was sent.  It is a bad
            idea to log these to a file as there may be thousands of them.
            </summary>
            <param name="baseMessage">The status part of the progress message with no percent information</param>
            <param name="percent">The integer percent from 0 to 100</param>
            <param name="message">The complete message, showing both status and completion percent</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogMessage(System.String,System.Windows.Forms.DialogResult)">
            <summary>
            This is called by each of the LogMessageBox methods automatically, but if the user wants to use
            a custom messagebox and then log the message and result directly this is the technique.
            </summary>
            <param name="text">The string text of the message that needs to be logged.</param>
            <param name="result">The dialog result from the shown messagebox.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogInput(System.String,System.Windows.Forms.DialogResult,System.String)">
            <summary>
            This method echoes information about input boxes to all the loggers.
            </summary>
            <param name="text">The string message that appeared on the InputBox</param>
            <param name="result">The ystem.Windows.Forms.DialogResult describing if the value was cancelled </param>
            <param name="value">The string containing the value entered.</param>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogMessageBox(System.Windows.Forms.IWin32Window,System.String)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="owner">An implementation of the IWin32Window that will own the modal form dialog box.</param>
            <param name="text">The text to display in the MessageBox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogMessageBox(System.Windows.Forms.IWin32Window,System.String,System.String)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="owner">An implementation of the IWin32Window that will own the modal form dialog box.</param>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogMessageBox(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="owner">An implementation of the IWin32Window that will own the modal form dialog box.</param>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <param name="buttons">One of the MessageBoxButtons that describes which button to display in the MessageBox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogMessageBox(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="owner">An implementation of the IWin32Window that will own the modal form dialog box.</param>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <param name="buttons">One of the MessageBoxButtons that describes which button to display in the MessageBox</param>
            <param name="icon">One of the MessageBoxIcons that describes which icon to display in the MessageBox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogMessageBox(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="owner">An implementation of the IWin32Window that will own the modal form dialog box.</param>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <param name="buttons">One of the MessageBoxButtons that describes which button to display in the MessageBox</param>
            <param name="icon">One of the MessageBoxIcons that describes which icon to display in the MessageBox</param>
            <param name="defaultButton">One of the MessageBoxDefaultButtons that describes the default button for the MessageBox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogMessageBox(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="owner">An implementation of the IWin32Window that will own the modal form dialog box.</param>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <param name="buttons">One of the MessageBoxButtons that describes which button to display in the MessageBox</param>
            <param name="icon">One of the MessageBoxIcons that describes which icon to display in the MessageBox</param>
            <param name="defaultButton">One of the MessageBoxDefaultButtons that describes the default button for the MessageBox</param>
            <param name="options">One of the MessageBoxOptions that describes which display and association options to use for the MessageBox.  You may pass 0 if you wish to use the defaults.</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogMessageBox(System.String)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="text">The text to display in the MessageBox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogMessageBox(System.String,System.String)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogMessageBox(System.String,System.String,System.Windows.Forms.MessageBoxButtons)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <param name="buttons">One of the MessageBoxButtons that describes which button to display in the MessageBox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogMessageBox(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <param name="buttons">One of the MessageBoxButtons that describes which button to display in the MessageBox</param>
            <param name="icon">One of the MessageBoxIcons that describes which icon to display in the MessageBox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogMessageBox(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <param name="buttons">One of the MessageBoxButtons that describes which button to display in the MessageBox</param>
            <param name="icon">One of the MessageBoxIcons that describes which icon to display in the MessageBox</param>
            <param name="defaultButton">One of the MessageBoxDefaultButtons that describes the default button for the MessageBox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogMessageBox(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <param name="buttons">One of the MessageBoxButtons that describes which button to display in the MessageBox</param>
            <param name="icon">One of the MessageBoxIcons that describes which icon to display in the MessageBox</param>
            <param name="defaultButton">One of the MessageBoxDefaultButtons that describes the default button for the MessageBox</param>
            <param name="options">One of the MessageBoxOptions that describes which display and association options to use for the MessageBox.  You may pass 0 if you wish to use the defaults.</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogMessageBox(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.Boolean)">
            <summary>
            Shows a MessageBox, logs the text of the text and the result chosen by the user.
            </summary>
            <param name="text">The text to display in the MessageBox</param>
            <param name="caption">The text to display in the title bar of the MessageBox</param>
            <param name="buttons">One of the MessageBoxButtons that describes which button to display in the MessageBox</param>
            <param name="icon">One of the MessageBoxIcons that describes which icon to display in the MessageBox</param>
            <param name="defaultButton">One of the MessageBoxDefaultButtons that describes the default button for the MessageBox</param>
            <param name="options">One of the MessageBoxOptions that describes which display and association options to use for the MessageBox.  You may pass 0 if you wish to use the defaults.</param>
            <param name="displayHelpButton">A boolean indicating whether or not to display a help button on the messagebox</param>
            <returns>A DialogResult showing the user input from this messagebox.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogInputBox(System.String,System.String@)">
            <summary>
            Displays an InputBox form given the specified text string.  The result is returned byref.
            A DialogResult is returned to show whether the user cancelled the form without providing input.
            </summary>
            <param name="text">The string text to use as an input prompt.</param>
            <param name="result">The string result that was typed into the dialog.</param>
            <returns>A DialogResult showing the outcome.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogInputBox(System.String,System.String,System.String@)">
            <summary>
            Displays an InputBox form given the specified text string.  The result is returned byref.
            A DialogResult is returned to show whether the user cancelled the form without providing input.
            </summary>
            <param name="text">The string text to use as an input prompt.</param>
            <param name="caption">The string to use in the title bar of the InputBox.</param>
            <param name="result">The string result that was typed into the dialog.</param>
            <returns>A DialogResult showing the outcome.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogInputBox(System.String,System.String,DotSpatial.Data.ValidationType,System.String@)">
            <summary>
            Displays an InputBox form given the specified text string.  The result is returned byref.
            A DialogResult is returned to show whether the user cancelled the form without providing input.
            </summary>
            <param name="text">The string text to use as an input prompt.</param>
            <param name="caption">The string to use in the title bar of the InputBox.</param>
            <param name="validation">A DotSpatial.Data.ValidationType enumeration specifying acceptable validation to return OK.</param>
            <param name="result">The string result that was typed into the dialog.</param>
            <returns>A DialogResult showing the outcome.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogInputBox(System.String,System.String,DotSpatial.Data.ValidationType,System.Drawing.Icon,System.String@)">
            <summary>
            Displays an InputBox form given the specified text string.  The result is returned byref.
            A DialogResult is returned to show whether the user cancelled the form without providing input.
            </summary>
            <param name="text">The string text to use as an input prompt.</param>
            <param name="caption">The string to use in the title bar of the InputBox.</param>
            <param name="validation">A DotSpatial.Data.ValidationType enumeration specifying acceptable validation to return OK.</param>
            <param name="icon">Specifies an icon to display on this form.</param>
            <param name="result">The string result that was typed into the dialog.</param>
            <returns>A DialogResult showing the outcome.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogInputBox(System.Windows.Forms.Form,System.String,System.String@)">
            <summary>
            Displays an InputBox form given the specified text string.  The result is returned byref.
            A DialogResult is returned to show whether the user cancelled the form without providing input.
            </summary>
            <param name="owner">The window that owns this modal dialog.</param>
            <param name="text">The string text to use as an input prompt.</param>
            <param name="result">The string result that was typed into the dialog.</param>
            <returns>A DialogResult showing the outcome.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogInputBox(System.Windows.Forms.Form,System.String,System.String,System.String@)">
            <summary>
            Displays an InputBox form given the specified text string.  The result is returned byref.
            A DialogResult is returned to show whether the user cancelled the form without providing input.
            </summary>
            <param name="owner">The window that owns this modal dialog.</param>
            <param name="text">The string text to use as an input prompt.</param>
            <param name="caption">The string to use in the title bar of the InputBox.</param>
            <param name="result">The string result that was typed into the dialog.</param>
            <returns>A DialogResult showing the outcome.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogInputBox(System.Windows.Forms.Form,System.String,System.String,DotSpatial.Data.ValidationType,System.String@)">
            <summary>
            Displays an InputBox form given the specified text string.  The result is returned byref.
            A DialogResult is returned to show whether the user cancelled the form without providing input.
            </summary>
            <param name="owner">The window that owns this modal dialog.</param>
            <param name="text">The string text to use as an input prompt.</param>
            <param name="caption">The string to use in the title bar of the InputBox.</param>
            <param name="validation">A DotSpatial.Data.ValidationType enumeration specifying acceptable validation to return OK.</param>
            <param name="result">The string result that was typed into the dialog.</param>
            <returns>A DialogResult showing the outcome.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.LogInputBox(System.Windows.Forms.Form,System.String,System.String,DotSpatial.Data.ValidationType,System.Drawing.Icon,System.String@)">
            <summary>
            Displays an InputBox form given the specified text string.  The result is returned byref.
            A DialogResult is returned to show whether the user cancelled the form without providing input.
            </summary>
            <param name="owner">The window that owns this modal dialog.</param>
            <param name="text">The string text to use as an input prompt.</param>
            <param name="caption">The string to use in the title bar of the InputBox.</param>
            <param name="validation">A DotSpatial.Data.ValidationType enumeration specifying acceptable validation to return OK.</param>
            <param name="icon">Specifies an icon to display on this form.</param>
            <param name="result">The string result that was typed into the dialog.</param>
            <returns>A DialogResult showing the outcome.</returns>
        </member>
        <member name="M:DotSpatial.Data.Forms.LogManager.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.LogManager.Components1">
             <summary>
            
             </summary>
        </member>
        <member name="P:DotSpatial.Data.Forms.LogManager.Directories">
            <summary>
            Gets or sets the list of string directories that may contain dlls with ILogManagers
            </summary>
        </member>
    </members>
</doc>
